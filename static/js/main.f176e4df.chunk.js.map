{"version":3,"sources":["context/AppContextProvider.tsx","api/fetchData.ts","helpers/hooks/useLocalStorage.tsx","helpers/ScrollTop.tsx","helpers/PageNavLink.tsx","helpers/searchHelper.tsx","helpers/hooks/useDebounce.tsx","types/Pathnames.ts","components/SearchBar/SearchBar.tsx","types/SortType.ts","components/IconMenu/IconMenu.tsx","components/Header/Header.tsx","components/ModelsCounter/ModelsCounter.tsx","components/CategoryCard/CategoryCard.tsx","components/CategoriesList/CategoriesList.tsx","components/ProductPrice/ProductPrice.tsx","components/PropertyList/PropertyList.tsx","components/ButtonAddToCart/ButtonAddToCart.tsx","components/ProductCard/ProductCard.tsx","helpers/sortHelper.tsx","components/SlickSlider/SlickSlider.tsx","components/Loader/Loader.tsx","components/SlickCarousel/SlickCarousel.tsx","pages/HomePage/HomePage.tsx","components/BreadCrumbs/BreadCrumbs.tsx","components/NotFound/NotFound.tsx","components/Dropdown/Dropdown.tsx","components/Pagination/Pagination.tsx","components/NoSearchResults/NoSearchResults.tsx","components/ProductList/ProductList.tsx","types/TechSpecification.ts","pages/CategoryPage/CategoryPage.tsx","types/Colors.ts","pages/ItemPage/ItemPage.tsx","pages/FavoritesPage/FavoritesPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Footer/Footer.tsx","components/CheckoutCard/CheckoutCard.tsx","pages/CartPage/CartPage.tsx","pages/Page/Page.tsx","App.tsx","index.tsx"],"names":["AppContext","createContext","favorites","cart","toggleToFavorites","toggleToCart","isProductSelected","updateCountInCart","AppProvider","Provider","request","url","fetch","then","response","ok","Error","json","getProducts","getProductById","id","getProductByCategory","categoryName","products","filter","product","category","useLocalStorage","key","initialValue","useState","data","localStorage","getItem","JSON","parse","value","setValue","currentValue","setItem","stringify","ScrollToTop","pathname","useLocation","useEffect","elementId","element","document","getElementById","scrollIntoView","behavior","scrollToElement","PageNavLink","to","text","className","isActive","classNames","selected","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","delete","Array","isArray","part","append","set","PathnamesForNav","PathnamesApp","SearchBar","useSearchParams","searchParams","setSearchParams","appliedQuery","setAppliedQuery","debounceSearch","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","pathnameNormalized","substring","isInputEmpty","length","isSearchOpened","setIsSearchOpened","query","handleClearSearchInput","type","placeholder","onChange","ev","target","data-cy","onClick","SortType","SortTypeForDropdown","IconMenu","count","link","iconName","linkAddress","pageName","toLowerCase","Header","useContext","isMenuOpened","setIsMenuOpened","isSearchBarShown","keys","some","path","toggleMenu","Home","map","item","Favorites","Cart","header__menu_opened","ModelsCounter","number","CategoryCard","title","name","itemCount","alt","src","CategoriesList","productsCounter","categoriesNormalized","newName","ProductPrice","discountPrice","regularPrice","PropertyList","properties","property","ButtonAddToCart","isProductInFav","isProductInCart","ProductCard","isProductSelectedinFav","itemId","isProductSelectedinCart","screen","capacity","ram","image","fullPrice","price","sortProducts","sortBy","sort","item1","item2","discount2","discount1","Cheapest","Expensive","Alphabetically","localeCompare","Newest","year","MaxDiscount","Random","Math","random","SlickSlider","visibleProducts","setVisibleProducts","sortedProducts","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","responsive","breakpoint","settings","variableWidth","arrows","Loader","SlickCarousel","banners","slice","dots","autoplay","autoplaySpeed","bannerName","HomePage","isLoading","BreadCrumbs","breadcrumbs","split","isLastLink","index","crumbs","join","linkTO","disabled","NotFound","navigate","useNavigate","Dropdown","label","classModificator","options","startValue","searchParamsKey","isOpen","setIsOpen","toggle","htmlFor","dropdown__arrow_opened","option","handleChangeValue","search","params","page","active","Pagination","total","itemsOnPage","currentPage","lastPage","ceil","visiblePages","setVisiblePages","adjacentPages","round","DEFAULT_VISIBLE_PAGES","startPage","max","endPage","min","numberOfPages","_","pageNumber","NoSearchResults","itemsOptions","ProductList","isSortDropdownShown","isPaginationShown","handleVisibleProductsNumber","setIsLoading","Number","get","start","end","isPaginationBarShown","productsByQuery","inputQuery","queryNormalized","trim","includes","useMemo","isRenderedRef","useRef","current","startSortValue","startItemsValue","values","defaultProps","TechnicalSpecifications","CategoryPage","setProducts","productCount","setProductCount","a","productsFromServer","loadProducts","colors","black","white","red","silver","gold","yellow","rosegold","spacegray","coral","midnightgreen","green","purple","calcValueSpecification","spec","specValue","navigateTo","paramOld","paramNew","newLink","replace","chooseProperties","resolution","processor","ItemPage","setProduct","images","mainImg","setMainImg","useParams","selectedItem","find","findProductById","isProductFind","error","setError","productId","detailedPproductFromServer","loadProductById","window","history","go","img","onChangeImage","colorsAvailable","color","style","background","colorName","capacityAvailable","priceRegular","priceDiscount","description","FavoritesPage","NotFoundPage","redirectTimer","Footer","CheckoutCard","setCount","prevCount","CartPage","isPopupShown","setIsPopupShown","totalSum","setTotalSum","totalModelsCount","setTotalModelsCount","totalCost","reduce","accumulator","totalCount","cart__popup_shown","Page","phones","setPhones","tablets","setTablets","accessories","setAccessories","setProductsCounter","setFavorites","setCart","productsGroup","newFavorites","productWidthCount","newCart","newCount","updatedCart","Phones","Tablets","Accessories","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.f176e4df.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\nimport { Product, ProductInCart } from '../types/Product';\n\nexport type AppContextType = {\n  favorites: Product[],\n  cart: ProductInCart[],\n  toggleToFavorites: (product: Product) => void,\n  toggleToCart: (product: Product | ProductInCart) => void,\n  isProductSelected: (productId: string, products: Product[]) => boolean,\n  updateCountInCart: (id: string, newCount: number) => void,\n};\n\nexport const AppContext = createContext<AppContextType>({\n  favorites: [],\n  cart: [],\n  toggleToFavorites: () => {},\n  toggleToCart: () => {},\n  isProductSelected: () => false,\n  updateCountInCart: () => {},\n});\n\nexport const AppProvider = AppContext.Provider;\n\nexport const useAppContext = () => {\n  const data = useContext(AppContext);\n\n  return data;\n};\n","import { Product } from '../types/Product';\nimport { DetailedProduct } from '../types/DetailedProduct';\n\nconst BASE_URL = 'https://mate-academy.github.io/react_phone-catalog/_new/';\n\nfunction request<T>(url: string): Promise<T> {\n  return fetch(BASE_URL + url).then(response => {\n    if (!response.ok) {\n      throw new Error('Can not load data from server');\n    }\n\n    return response.json();\n  });\n}\n\nexport const getProducts = () => {\n  return request<Product[]>('/products.json');\n};\n\nexport const getProductById = (id: string) => {\n  return request<DetailedProduct>(`/products/${id}.json`);\n};\n\nexport const getProductByCategory = (categoryName: string) => {\n  return getProducts()\n    .then(products => {\n      const productsInCategory = products\n        .filter(product => product.category === categoryName);\n\n      return productsInCategory;\n    });\n};\n","import { useState } from 'react';\nimport { Product } from '../../types/Product';\n\nexport const useLocalStorage = (key: string, initialValue: Product[]) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const data = localStorage.getItem(key);\n\n      return data ? JSON.parse(data) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (currentValue: Product) => {\n    setValue(currentValue);\n    localStorage.setItem(key, JSON.stringify(currentValue));\n  };\n\n  return [value, save];\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  const scrollToElement = (elementId: string) => {\n    const element = document.getElementById(elementId);\n\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  useEffect(() => {\n    scrollToElement('header');\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'nav__item',\n        { selected: isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { useState, useEffect } from 'react';\n\nexport const useDebounce = (value: string, delay = 300) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","// eslint-disable-next-line no-shadow\nexport enum PathnamesForNav {\n  Home = '/',\n  Phones = '/phones',\n  Tablets = '/tablets',\n  Accessories = '/accessories',\n}\n\n// eslint-disable-next-line no-shadow\nexport enum PathnamesApp {\n  Home = '/',\n  Phones = '/phones',\n  Tablets = '/tablets',\n  Accessories = '/accessories',\n  Favorites = '/favorites',\n  Cart = '/cart',\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../../helpers/searchHelper';\nimport { useDebounce } from '../../helpers/hooks/useDebounce';\nimport './searchBar.scss';\n\nexport const SearchBar: React.FC = () => {\n  const { pathname } = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const debounceSearch = useDebounce(appliedQuery, 500) || null;\n  const pathnameNormalized = pathname.substring(1);\n  const isInputEmpty = appliedQuery.length === 0;\n  const [isSearchOpened, setIsSearchOpened] = useState(false);\n\n  useEffect(() => {\n    setSearchParams(getSearchWith(searchParams, { query: debounceSearch }));\n  }, [debounceSearch]);\n\n  const handleClearSearchInput = () => {\n    setAppliedQuery('');\n    setSearchParams(getSearchWith(searchParams, { query: null }));\n    setIsSearchOpened(false);\n  };\n\n  useEffect(() => {\n    handleClearSearchInput();\n  }, [pathname]);\n\n  const handleChangeSearchInput = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setAppliedQuery(ev.target.value);\n  };\n\n  const toggleSearch = () => {\n    setIsSearchOpened(!isSearchOpened);\n  };\n\n  return (\n    <>\n      <div className={classNames(\n        'search-bar',\n        { 'search-bar_opened': isSearchOpened },\n      )}\n      >\n        <input\n          type=\"text\"\n          placeholder={`Search in ${pathnameNormalized}`}\n          value={appliedQuery}\n          onChange={handleChangeSearchInput}\n          className=\"search-bar__input\"\n        />\n        {/* eslint-disable-next-line */}\n        <button\n          data-cy=\"searchDelete\"\n          type=\"button\"\n          className={classNames(\n            'search-bar__button',\n            isInputEmpty\n              ? 'search-bar__button_search'\n              : 'search-bar__button_close',\n          )}\n          onClick={handleClearSearchInput}\n        />\n      </div>\n      {/* eslint-disable-next-line */}\n      <button\n        type=\"button\"\n        className=\"search-bar__icon\"\n        onClick={toggleSearch}\n      />\n    </>\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum SortType {\n  Newest = 'newest',\n  Alphabetically = 'alphabetically',\n  Cheapest = 'cheapest',\n  Expensive = 'expensive',\n  Year = 'year',\n  MaxDiscount = 'maxDiscount',\n  HotPrice = 'hotprice',\n  Random = 'random',\n}\n\n// eslint-disable-next-line no-shadow\nexport enum SortTypeForDropdown {\n  Newest = 'newest',\n  Alphabetically = 'alphabetically',\n  Cheapest = 'cheapest',\n  Expensive = 'expensive',\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PathnamesApp } from '../../types/Pathnames';\nimport './iconMenu.scss';\n\ntype Props = {\n  count: number,\n  link: PathnamesApp,\n  iconName: string,\n};\n\nexport const IconMenu: React.FC<Props> = ({\n  count,\n  link,\n  iconName,\n}) => {\n  return (\n    <NavLink\n      to={link}\n      className={({ isActive }) => classNames(\n        'icon',\n        { selected: isActive },\n      )}\n    >\n      <div className={`icon__img icon__img_${iconName}`} />\n      {count > 0 && (\n        <div className=\"icon__count\">\n          <span className=\"icon__text\">\n            {count}\n          </span>\n        </div>\n      )}\n    </NavLink>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PageNavLink } from '../../helpers/PageNavLink';\nimport { AppContext } from '../../context/AppContextProvider';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { PathnamesApp, PathnamesForNav } from '../../types/Pathnames';\nimport { IconMenu } from '../IconMenu/IconMenu';\nimport './header.scss';\n\nconst linkAddress = (pageName: string) => {\n  return pageName === 'Home' ? '/' : pageName.toLowerCase();\n};\n\nexport const Header: React.FC = () => {\n  const { favorites, cart } = useContext(AppContext);\n  const { pathname } = useLocation();\n  const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n  const pathnameNormalized = pathname.substring(1);\n  const isSearchBarShown = Object.keys(PathnamesForNav)\n    .some(path => path.toLowerCase() === pathnameNormalized);\n\n  useEffect(() => {\n    setIsMenuOpened(false);\n  }, [pathname]);\n\n  const toggleMenu = () => {\n    setIsMenuOpened(!isMenuOpened);\n  };\n\n  return (\n    <>\n      <div\n        id=\"header\"\n        className=\"header\"\n      >\n        <div className=\"header__content\">\n          <Link to={PathnamesApp.Home} className=\"header__logo\" />\n          <div className=\"nav\">\n            {Object.keys(PathnamesForNav).map(item => (\n              <PageNavLink\n                key={item}\n                text={item}\n                to={linkAddress(item)}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"header__container\">\n          {isSearchBarShown && <SearchBar />}\n          <IconMenu\n            link={PathnamesApp.Favorites}\n            count={favorites.length}\n            iconName=\"favorites\"\n          />\n          <IconMenu\n            link={PathnamesApp.Cart}\n            count={cart.length}\n            iconName=\"cart\"\n          />\n          {/* eslint-disable-next-line */}\n          <button\n            type=\"button\"\n            className=\"header__menu-open-button\"\n            onClick={toggleMenu}\n          />\n        </div>\n      </div>\n      <nav className={classNames(\n        'header__menu',\n        { header__menu_opened: isMenuOpened },\n      )}\n      >\n        <div className=\"header__box\">\n          <Link to={PathnamesApp.Home} className=\"header__logo\" />\n          {/* eslint-disable-next-line */}\n          <button\n            type=\"button\"\n            className=\"header__menu-open-button\"\n            onClick={toggleMenu}\n          />\n        </div>\n        <div className=\"nav\">\n          {Object.keys(PathnamesForNav).map(item => (\n            <PageNavLink\n              key={item}\n              text={item}\n              to={linkAddress(item)}\n            />\n          ))}\n        </div>\n        <div className=\"header__container\">\n          <IconMenu\n            link={PathnamesApp.Favorites}\n            count={favorites.length}\n            iconName=\"favorites\"\n          />\n          <IconMenu\n            link={PathnamesApp.Cart}\n            count={cart.length}\n            iconName=\"cart\"\n          />\n        </div>\n      </nav>\n    </>\n  );\n};\n","import React from 'react';\nimport './modelsCounter.scss';\n\nexport type Props = {\n  number: number;\n};\n\nexport const ModelsCounter:React.FC<Props> = ({ number = 0 }) => {\n  return (\n    <p className=\"models\">\n      {`${number} models`}\n    </p>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Category } from '../../types/Category';\nimport { ModelsCounter } from '../ModelsCounter/ModelsCounter';\nimport './categoryCard.scss';\n\nexport type Props = {\n  category: Category,\n};\n\nexport const CategoryCard: React.FC<Props> = ({ category }) => {\n  const {\n    id,\n    title,\n    name,\n    itemCount,\n  } = category;\n\n  return (\n    <Link\n      key={id}\n      to={`/${name}`}\n      className=\"category-card\"\n    >\n      <div className=\"category-card__image-container\">\n        <img\n          alt={name}\n          className=\"category-card__img\"\n          src={`./img/categories/${name}.png`}\n        />\n      </div>\n      <h1 className=\"category-card__title\">\n        {title}\n      </h1>\n      <ModelsCounter number={itemCount} />\n    </Link>\n  );\n};\n","import React from 'react';\nimport { Category } from '../../types/Category';\nimport { CategoryCard } from '../CategoryCard/CategoryCard';\nimport './categoriesList.scss';\n\nexport type Props = {\n  productsCounter: {\n    [key: string]: number\n  },\n};\n\nexport const CategoriesList: React.FC<Props> = ({ productsCounter }) => {\n  const categories = [\n    { id: 1, title: 'Mobile phones' },\n    { id: 2, title: 'Tablets' },\n    { id: 3, title: 'Accessories' },\n  ];\n\n  const normalizeNameCategory = (category: string): string => {\n    return category === 'Mobile phones' ? 'phones' : category.toLowerCase();\n  };\n\n  const categoriesNormalized: Category[] = categories.map(item => {\n    const newName = normalizeNameCategory(item.title);\n\n    return ({\n      ...item,\n      name: newName,\n      itemCount: productsCounter[newName],\n    });\n  });\n\n  return (\n    <ul className=\"product-category\">\n      {categoriesNormalized.map(category => (\n        <CategoryCard\n          key={category.name}\n          data-cy=\"categoryLinksContainer\"\n          category={category}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './productPrice.scss';\n\nexport type Props = {\n  discountPrice: number,\n  regularPrice: number,\n};\n\nexport const ProductPrice: React.FC<Props> = ({\n  discountPrice,\n  regularPrice,\n}) => {\n  return (\n    <div className=\"price\">\n      <div className=\"price__container\">\n        <p className=\"price__text price__text_bold\">{`$${discountPrice}`}</p>\n        <p className=\"price__text price__text_discount\">{`$${regularPrice}`}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './propertyList.scss';\n\nexport type Props = {\n  properties: {\n    [key: string]: string,\n  },\n};\n\nexport const PropertyList: React.FC<Props> = ({ properties }) => {\n  return (\n    <div className=\"properties\">\n      {Object.keys(properties).map(property => (\n        <div key={property} className=\"properties__item\">\n          <p className=\"properties__text card__text_light-gray\">{property}</p>\n          <p className=\"properties__text\">\n            {properties[property]}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { AppContext } from '../../context/AppContextProvider';\nimport { Product } from '../../types/Product';\nimport './buttonAddToCart.scss';\n\nexport type Props = {\n  isProductInFav: boolean,\n  isProductInCart: boolean,\n  product: Product,\n};\n\nexport const ButtonAddToCart: React.FC<Props> = ({\n  isProductInFav,\n  isProductInCart,\n  product,\n}) => {\n  const { toggleToFavorites, toggleToCart } = useContext(AppContext);\n\n  const toggleToFav = () => {\n    toggleToFavorites(product);\n  };\n\n  const toggleToCheckout = () => {\n    toggleToCart(product);\n  };\n\n  return (\n    <div className=\"buttons-container\">\n      {/* eslint-disable-next-line */}\n      <button\n        type=\"button\"\n        className={classNames(\n          'button button_add-to-cart',\n          { selected: isProductInCart },\n        )}\n        onClick={toggleToCheckout}\n      >\n        {isProductInCart ? 'Added' : 'Add to cart'}\n      </button>\n      {/* eslint-disable-next-line */}\n      <button\n        data-cy=\"addToFavorite\"\n        type=\"button\"\n        className={classNames(\n          'button button_like',\n          { selected: isProductInFav },\n        )}\n        onClick={toggleToFav}\n      />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../context/AppContextProvider';\nimport { Product } from '../../types/Product';\nimport { ProductPrice } from '../ProductPrice/ProductPrice';\nimport { PropertyList } from '../PropertyList/PropertyList';\nimport { ButtonAddToCart } from '../ButtonAddToCart/ButtonAddToCart';\nimport './productCard.scss';\n\nexport type Props = {\n  product: Product,\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const {\n    favorites,\n    isProductSelected,\n    cart,\n  } = useContext(AppContext);\n\n  const isProductSelectedinFav = isProductSelected(product.itemId, favorites);\n  const isProductSelectedinCart = isProductSelected(product.itemId, cart);\n\n  const { screen, capacity, ram } = product;\n\n  const properties = { screen, capacity, ram };\n\n  return (\n    <div className=\"card\">\n      <Link className=\"card__link\" to={`/${product.category}/${product.itemId}`}>\n        <img\n          className=\"card__image\"\n          alt={product.name}\n          src={product.image}\n        />\n      </Link>\n      <h1 className=\"card__title\">{product.name}</h1>\n      <div className=\"card__price\">\n        <ProductPrice\n          regularPrice={product.fullPrice}\n          discountPrice={product.price}\n        />\n      </div>\n      <PropertyList properties={properties} />\n      <ButtonAddToCart\n        product={product}\n        isProductInFav={isProductSelectedinFav}\n        isProductInCart={isProductSelectedinCart}\n      />\n    </div>\n  );\n};\n","import { Product } from '../types/Product';\nimport { SortType } from '../types/SortType';\n\nexport const sortProducts = (\n  products: Product[],\n  sortBy: string,\n): Product[] => {\n  const copyOfProducts = [...products];\n\n  return copyOfProducts.sort((item1, item2) => {\n    const discount2 = item2.fullPrice - item2.price;\n    const discount1 = item1.fullPrice - item1.price;\n\n    switch (sortBy) {\n      case SortType.Cheapest:\n        return item1.fullPrice - item2.fullPrice;\n\n      case SortType.Expensive:\n        return item2.fullPrice - item1.fullPrice;\n\n      case SortType.Alphabetically:\n        return item1.name.localeCompare(item2.name);\n\n      case SortType.Newest:\n        return item2.year - item1.year;\n\n      case SortType.MaxDiscount:\n        return discount2 - discount1;\n\n      case SortType.Random:\n        return Math.random() - 0.5;\n\n      default:\n        return 0;\n    }\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport Slider from 'react-slick';\nimport { Product } from '../../types/Product';\nimport { ProductCard } from '../ProductCard/ProductCard';\nimport { sortProducts } from '../../helpers/sortHelper';\nimport { SortType } from '../../types/SortType';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './slickSlider.scss';\n\nexport type Props = {\n  products: Product[],\n  sortBy: SortType,\n};\n\nexport const SlickSlider: React.FC<Props> = ({ products, sortBy }) => {\n  const [visibleProducts, setVisibleProducts] = useState<Product[]>([]);\n\n  useEffect(() => {\n    const sortedProducts = sortProducts(products, sortBy);\n\n    setVisibleProducts(sortedProducts);\n  }, [products]);\n\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 2,\n    adaptiveHeight: true,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 800,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          variableWidth: true,\n          arrows: false,\n        },\n      },\n      {\n        breakpoint: 620,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          variableWidth: true,\n          arrows: false,\n        },\n      },\n    ],\n  };\n\n  return (\n    <div className=\"product-slider\">\n      <Slider {...settings}>\n        {visibleProducts.map((item: Product) => (\n          <ProductCard key={item.id} product={item} />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n","import React from 'react';\nimport './loader.scss';\n\nexport const Loader = () => <div className=\"loader\" />;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { PathnamesForNav } from '../../types/Pathnames';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './slickCarousel.scss';\n\nexport const SlickCarousel: React.FC = () => {\n  const banners = Object.keys(PathnamesForNav)\n    .slice(1).map(path => path.toLowerCase());\n\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: true,\n    autoplay: true,\n    autoplaySpeed: 5000,\n  };\n\n  return (\n    <div className=\"slick-carousel\">\n      <Slider {...settings}>\n        {banners.map((bannerName: string) => (\n          <img\n            key={bannerName}\n            alt={`banner_${bannerName}`}\n            src={`./img/carousel/${bannerName}.png`}\n          />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CategoriesList } from '../../components/CategoriesList/CategoriesList';\nimport { Product } from '../../types/Product';\nimport { SortType } from '../../types/SortType';\nimport { SlickSlider } from '../../components/SlickSlider/SlickSlider';\nimport { Loader } from '../../components/Loader/Loader';\nimport { SlickCarousel } from '../../components/SlickCarousel/SlickCarousel';\nimport './homePage.scss';\n\nexport type Props = {\n  products: Product[],\n  productsCounter: {\n    phones: number,\n    tablets: number,\n    accessories: number,\n  },\n  isLoading: boolean,\n};\n\nexport const HomePage: React.FC<Props> = ({\n  products,\n  productsCounter,\n  isLoading,\n}) => {\n  return (\n    <>\n      {!isLoading ? (\n        <div className=\"page__home\">\n          <section className=\"section\">\n            <h1 className=\"section__title\">Welcome to my store!</h1>\n            <SlickCarousel />\n          </section>\n          <section className=\"section\">\n            <h1 className=\"section__title\">Hot prices</h1>\n            <SlickSlider\n              products={products}\n              sortBy={SortType.MaxDiscount}\n            />\n          </section>\n          <section className=\"section\">\n            <h1 className=\"section__title\">Shop by category</h1>\n            <CategoriesList productsCounter={productsCounter} />\n          </section>\n          <section className=\"section\">\n            <h1 className=\"section__title\">Brand new models</h1>\n            <SlickSlider\n              products={products}\n              sortBy={SortType.Newest}\n            />\n          </section>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './breadCrumbs.scss';\n\nexport const BreadCrumbs: React.FC = () => {\n  const breadcrumbs = useLocation().pathname.split('/')\n    .filter(item => item !== '');\n\n  const isLastLink = (index: number) => {\n    return index === breadcrumbs.length - 1;\n  };\n\n  return (\n    <div data-cy=\"breadCrumbs\" className=\"breadcrumbs\">\n      <Link to=\"/\" className=\"breadcrumbs__home\" />\n      {breadcrumbs.map((crumbs, index) => {\n        const text = crumbs.split('-').join(' ');\n\n        const linkTO = `/${crumbs.toLowerCase()}`;\n\n        return (\n          <Link\n            key={crumbs}\n            to={linkTO}\n            className={classNames(\n              'breadcrumbs__link',\n              { disabled: isLastLink(index) },\n            )}\n          >\n            {text}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './notFound.scss';\n\nexport type Props = {\n  title: string,\n};\n\nexport const NotFound:React.FC<Props> = ({ title }) => {\n  const navigate = useNavigate();\n  const handleNavigate = () => navigate('/');\n\n  return (\n    <div className=\"not-found\">\n      <div className=\"not-found__container\">\n        <h2 className=\"not-found__title\">{title}</h2>\n      </div>\n      <button\n        className=\"not-found__button\"\n        type=\"button\"\n        onClick={handleNavigate}\n      >\n        Go Home\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './dropdown.scss';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helpers/searchHelper';\n\nexport type Props = {\n  label: string,\n  classModificator: string,\n  options: string[],\n  startValue: string,\n  searchParamsKey: string,\n};\n\nexport const Dropdown: React.FC<Props> = ({\n  label,\n  classModificator,\n  options,\n  startValue,\n  searchParamsKey,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchParams] = useSearchParams();\n  const [value, setValue] = useState(startValue);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleChangeValue = (option: string) => {\n    setValue(option);\n    setIsOpen(false);\n  };\n\n  const getSearchParams = (params: string) => {\n    if (searchParamsKey === 'itemsOnPage') {\n      return getSearchWith(searchParams, {\n        page: '1',\n        [searchParamsKey]: params,\n      });\n    }\n\n    return getSearchWith(searchParams, {\n      [searchParamsKey]: params,\n    });\n  };\n\n  return (\n    <div className={`dropdown dropdown_${classModificator}`}>\n      <label\n        htmlFor=\"dropdownSelect\"\n        className=\"dropdown__label\"\n      >\n        {label}\n      </label>\n      <button\n        id=\"dropdownSelect\"\n        type=\"button\"\n        className=\"dropdown__select\"\n        onClick={toggle}\n      >\n        <span>{value}</span>\n        <div\n          className={classNames(\n            'dropdown__arrow',\n            { dropdown__arrow_opened: isOpen },\n          )}\n        />\n      </button>\n\n      {isOpen && (\n        <ul className=\"dropdown__list\">\n          {options.map(option => (\n            /* eslint-disable-next-line */\n            <li\n              key={option}\n              className=\"dropdown__item\"\n              onClick={() => handleChangeValue(option)}\n            >\n              <Link\n                to={{\n                  search: getSearchParams(option),\n                }}\n                onClick={toggle}\n                className={classNames(\n                  'dropdown__link',\n                  { active: option === value },\n                )}\n              >\n                {option}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../../helpers/searchHelper';\nimport './pagination.scss';\n\nexport type Props = {\n  total: number,\n  itemsOnPage: number,\n  currentPage: number,\n};\n\nconst DEFAULT_VISIBLE_PAGES = 4;\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemsOnPage,\n  currentPage,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const lastPage = Math.ceil(total / itemsOnPage);\n  const [visiblePages, setVisiblePages] = useState<number[]>([]);\n\n  useEffect(() => {\n    const adjacentPages = Math.round(DEFAULT_VISIBLE_PAGES / 2);\n    let startPage = Math.max(1, currentPage - adjacentPages);\n    let endPage = Math.min(lastPage, currentPage + adjacentPages);\n\n    while (endPage - startPage < DEFAULT_VISIBLE_PAGES) {\n      if (startPage > 1) {\n        startPage -= 1;\n      } else if (endPage < lastPage) {\n        endPage += 1;\n      } else {\n        break;\n      }\n    }\n\n    const numberOfPages = [...Array(endPage - startPage + 1)]\n      .map((_, index) => startPage + index);\n\n    setVisiblePages(numberOfPages);\n  }, [currentPage, lastPage]);\n\n  useEffect(() => {\n    if (currentPage > lastPage) {\n      setSearchParams((params) => {\n        params.set('page', '1');\n\n        return params;\n      });\n    }\n  }, [currentPage, lastPage, setSearchParams]);\n\n  return (\n    <div data-cy=\"pagination\" className=\"pagination\">\n      <Link\n        data-cy=\"paginationLeft\"\n        to={{\n          search: getSearchWith(searchParams, {\n            page: (currentPage - 1).toString(),\n          }),\n        }}\n        className={classNames(\n          'pagination__arrow pagination__arrow_prev',\n          { disabled: currentPage === 1 },\n        )}\n      />\n\n      <ul className=\"pagination__list\">\n        {visiblePages.map(pageNumber => (\n          <li key={pageNumber} className=\"pagination__item\">\n            <Link\n              to={{\n                search: getSearchWith(searchParams, {\n                  page: pageNumber.toString(),\n                }),\n              }}\n              className={classNames(\n                'pagination__link',\n                { active: pageNumber === currentPage },\n              )}\n            >\n              {pageNumber}\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      <Link\n        data-cy=\"paginationRight\"\n        to={{\n          search: getSearchWith(searchParams, {\n            page: (currentPage + 1).toString(),\n          }),\n        }}\n        className={classNames(\n          'pagination__arrow pagination__arrow_next',\n          { disabled: currentPage === lastPage },\n        )}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport './noSearchResults.scss';\n\nexport const NoSearchResults:React.FC = () => {\n  return (\n    <div className=\"no-results\">\n      <h2 className=\"no-results__title\">\n        There are no products matching your request\n      </h2>\n    </div>\n  );\n};\n","import React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Product } from '../../types/Product';\nimport { sortProducts } from '../../helpers/sortHelper';\nimport { Dropdown } from '../Dropdown/Dropdown';\nimport { SortTypeForDropdown } from '../../types/SortType';\nimport { Pagination } from '../Pagination/Pagination';\nimport { ProductCard } from '../ProductCard/ProductCard';\nimport { NoSearchResults } from '../NoSearchResults/NoSearchResults';\nimport './productList.scss';\nimport { Loader } from '../Loader';\n\nexport type Props = {\n  products: Product[],\n  isSortDropdownShown?: boolean,\n  isPaginationShown?: boolean,\n  handleVisibleProductsNumber:(number: number) => void,\n};\n\nexport const itemsOptions = ['4', '8', '16', 'All'];\n\nexport const ProductList: React.FC<Props> = ({\n  products,\n  isSortDropdownShown,\n  isPaginationShown,\n  handleVisibleProductsNumber,\n}) => {\n  const [searchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const itemsOnPage = Number(searchParams.get('itemsOnPage'))\n    || products.length;\n  const sortBy = searchParams.get('sort') || '';\n  const page = Number(searchParams.get('page')) || 1;\n  const query = searchParams.get('query') || '';\n  const start = (page - 1) * itemsOnPage;\n  const end = start + itemsOnPage;\n  const isPaginationBarShown = isPaginationShown\n    && itemsOnPage !== products.length;\n\n  const [visibleProducts, setVisibleProducts] = useState<Product[]>(products);\n\n  const productsByQuery = (inputQuery: string) => {\n    const queryNormalized = inputQuery.trim().toLowerCase();\n\n    return products.filter(item => {\n      return item.name.toLowerCase().includes(queryNormalized);\n    });\n  };\n\n  const sortedProducts = useMemo(\n    () => sortProducts(productsByQuery(query), sortBy),\n    [sortBy, products, query],\n  );\n\n  const isRenderedRef = useRef(false);\n\n  useEffect(() => {\n    if (!isRenderedRef.current) {\n      isRenderedRef.current = true;\n    } else {\n      setIsLoading(true);\n    }\n\n    if (handleVisibleProductsNumber) {\n      handleVisibleProductsNumber(sortedProducts.length);\n    }\n\n    setVisibleProducts(sortedProducts.slice(start, end));\n\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [products, sortBy, itemsOnPage, page, query]);\n\n  const startSortValue = sortBy.length === 0 ? 'Choose an option' : sortBy;\n  const startItemsValue = itemsOnPage === products.length\n    ? 'All'\n    : itemsOnPage.toString();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {visibleProducts.length > 0 && !isLoading && (\n        <div className=\"product-list\">\n          {(isPaginationShown || isSortDropdownShown) && (\n            <div className=\"product-list__container\">\n              {isSortDropdownShown && (\n                <div className=\"product-list__dropdowns\">\n                  <Dropdown\n                    label=\"Sort by\"\n                    classModificator=\"sort\"\n                    options={Object.values(SortTypeForDropdown)}\n                    startValue={startSortValue}\n                    searchParamsKey=\"sort\"\n                  />\n                  <Dropdown\n                    label=\"Items on page\"\n                    classModificator=\"items\"\n                    options={itemsOptions}\n                    startValue={startItemsValue}\n                    searchParamsKey=\"itemsOnPage\"\n                  />\n                </div>\n              )}\n              {isPaginationBarShown && (\n                <div className={classNames(\n                  'product-list__pagination',\n                  'product-list__pagination_top',\n                )}\n                >\n                  <Pagination\n                    total={sortedProducts.length}\n                    itemsOnPage={itemsOnPage}\n                    currentPage={page}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          {visibleProducts && (\n            <ul data-cy=\"cardsContainer\" className=\"product-list__content\">\n              {visibleProducts.map((product: Product) => (\n                <li\n                  key={product.id}\n                  data-cy=\"cardsContainer\"\n                  className=\"product-list__item\"\n                >\n                  <ProductCard product={product} />\n                </li>\n              ))}\n            </ul>\n          )}\n\n          {isPaginationBarShown && (\n            <div className=\"product-list__pagination\">\n              <Pagination\n                total={sortedProducts.length}\n                itemsOnPage={itemsOnPage}\n                currentPage={page}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {productsByQuery(query).length === 0 && !isLoading && (\n        <NoSearchResults />\n      )}\n    </>\n  );\n};\n\nProductList.defaultProps = {\n  isSortDropdownShown: false,\n  isPaginationShown: false,\n};\n","// eslint-disable-next-line no-shadow\nexport enum TechnicalSpecifications {\n  Screen = 'screen',\n  Resolution = 'resolution',\n  Processor = 'processor',\n  RAM = 'ram',\n  Capacity = 'capacity',\n  Camera = 'camera',\n  Zoom = 'zoom',\n  Cell = 'cell',\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Product } from '../../types/Product';\nimport { BreadCrumbs } from '../../components/BreadCrumbs/BreadCrumbs';\nimport { NotFound } from '../../components/NotFound/NotFound';\nimport { ModelsCounter } from '../../components/ModelsCounter/ModelsCounter';\nimport { ProductList } from '../../components/ProductList/ProductList';\nimport { Loader } from '../../components/Loader';\nimport { getProductByCategory } from '../../api/fetchData';\nimport './categoryPage.scss';\n\nexport const CategoryPage:React.FC = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [productCount, setProductCount] = useState(products?.length);\n  const { pathname } = useLocation();\n  const categoryName = pathname.slice(1);\n\n  async function loadProducts() {\n    setIsLoading(true);\n\n    try {\n      const productsFromServer = await getProductByCategory(categoryName);\n\n      setProducts(productsFromServer);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  const handleVisibleProductsNumber = (number: number) => {\n    setProductCount(number);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {!isLoading && (\n        <div className={`page__${categoryName}`}>\n          <BreadCrumbs />\n          <h1 className=\"main-title\">{categoryName}</h1>\n          <ModelsCounter number={productCount} />\n\n          {!products.length ? (\n            <NotFound\n              title={\n                `Sorry, we are temporarily not selling ${categoryName}. \n                Please come back in a month.`\n              }\n            />\n          ) : (\n            <ProductList\n              products={products}\n              handleVisibleProductsNumber={handleVisibleProductsNumber}\n              isSortDropdownShown\n              isPaginationShown\n            />\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","export type ColorsType = {\n  black: string;\n  white: string;\n  red: string;\n  silver: string;\n  gold: string;\n  yellow: string;\n  rosegold: string;\n  spacegray: string;\n  coral: string;\n  midnightgreen: string;\n  green: string;\n  purple: string;\n};\n\nexport const colors = {\n  black: '#000',\n  white: '#000',\n  red: '#ff0000',\n  silver: '#b5b5bd',\n  gold: '#d4af37',\n  yellow: '#ffff00',\n  rosegold: '#b76e79',\n  spacegray: '#717378',\n  coral: '#ff7f50',\n  midnightgreen: '#004953',\n  green: '#4CD887',\n  purple: '#EF7FFC',\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { AppContext } from '../../context/AppContextProvider';\nimport { Product } from '../../types/Product';\nimport { DetailedProduct } from '../../types/DetailedProduct';\nimport { colors, ColorsType } from '../../types/Colors';\nimport { TechnicalSpecifications } from '../../types/TechSpecification';\nimport { SortType } from '../../types/SortType';\nimport { ProductPrice } from '../../components/ProductPrice/ProductPrice';\nimport { PropertyList } from '../../components/PropertyList/PropertyList';\nimport { getProductById } from '../../api/fetchData';\nimport { Loader } from '../../components/Loader';\nimport { BreadCrumbs } from '../../components/BreadCrumbs/BreadCrumbs';\n/* eslint-disable-next-line */\nimport { ButtonAddToCart } from '../../components/ButtonAddToCart/ButtonAddToCart';\nimport { SlickSlider } from '../../components/SlickSlider/SlickSlider';\nimport './itemPage.scss';\n\nconst calcValueSpecification = (\n  product: DetailedProduct,\n  spec: string,\n) => {\n  const specValue = product[spec.toLowerCase() as keyof DetailedProduct];\n\n  return Array.isArray(specValue) ? specValue.join(', ') : specValue;\n};\n\nconst navigateTo = (\n  pathname: string,\n  paramOld: string,\n  paramNew: string,\n) => {\n  const newLink = pathname.replace(\n    paramOld.toLowerCase(),\n    paramNew.toLowerCase(),\n  );\n\n  return `${newLink}`;\n};\n\nconst chooseProperties = (product: DetailedProduct) => {\n  const {\n    screen,\n    resolution,\n    processor,\n    ram,\n  } = product;\n\n  const properties = {\n    screen,\n    resolution,\n    processor,\n    ram,\n  };\n\n  return properties;\n};\n\nconst bgrColor = (colorName: string) => {\n  return colors[colorName as keyof ColorsType];\n};\n\nconst findProductById = (id = '', products: Product[]) => {\n  return products.find((product) => product.itemId === id);\n};\n\nexport type Props = {\n  products: Product[],\n};\n\nexport const ItemPage: React.FC<Props> = ({ products }) => {\n  const [product, setProduct] = useState<DetailedProduct | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [mainImg, setMainImg] = useState(product?.images[0]);\n\n  const { pathname } = useLocation();\n  const { itemId = '' } = useParams();\n  const { favorites, cart, isProductSelected } = useContext(AppContext);\n\n  const isProductSelectedinFav = isProductSelected(\n    product?.id || '', favorites,\n  );\n  const isProductSelectedinCart = isProductSelected(product?.id || '', cart);\n  const selectedItem = findProductById(product?.id, products);\n  const isProductFind = product && selectedItem;\n\n  const [error, setError] = useState('');\n\n  async function loadProductById(productId: string) {\n    setIsLoading(true);\n\n    try {\n      const detailedPproductFromServer = await getProductById(productId);\n\n      setProduct(detailedPproductFromServer);\n      setMainImg(detailedPproductFromServer.images[0]);\n    } catch {\n      setError('Product not found');\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadProductById(itemId);\n  }, [itemId]);\n\n  const onChangeImage = (img: string) => {\n    setMainImg(img);\n  };\n\n  const goToPreviusPage = () => {\n    window.history.go(-1);\n  };\n\n  return (\n    <div className=\"page__item\">\n      {isLoading && (\n        <div className=\"product-details__loader\">\n          <Loader />\n        </div>\n      )}\n\n      {!isLoading && isProductFind && (\n        <>\n          <BreadCrumbs />\n\n          <div className=\"product-details__back\">\n            <button\n              type=\"button\"\n              className=\"product-details__button-back\"\n              onClick={goToPreviusPage}\n            >\n              Back\n            </button>\n          </div>\n\n          <div className=\"product-details\">\n            <h1 className=\"product-details__title\">{product.name}</h1>\n            <div className=\"product-details__row\">\n              <div className=\"product-details__content\">\n                {product.images && (\n                  <div className=\"product-details__images-container\">\n                    <div className=\"image-list\">\n                      {product.images.map(img => (\n                        <button\n                          type=\"button\"\n                          key={img}\n                          className=\"image-list__box\"\n                          onClick={() => onChangeImage(img)}\n                        >\n                          <img\n                            alt=\"product\"\n                            src={img}\n                            className={classNames(\n                              'image image_small',\n                              { active: img === mainImg },\n                            )}\n                          />\n                        </button>\n                      ))}\n                    </div>\n                    <div className=\"image__box\">\n                      <img\n                        alt=\"product main\"\n                        src={`${mainImg}`}\n                        className=\"image image_main\"\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n              <div className=\"product-details__action\">\n                <div className=\"product-details__select\">\n                  <div className=\"colors\">\n                    <h3 className=\"colors__title\">Available colors</h3>\n                    <div className=\"colors__list\">\n                      {product.colorsAvailable.map(color => (\n                        <Link\n                          key={color}\n                          to={{\n                            pathname: `${navigateTo(pathname, product.color, color)}`,\n                          }}\n                          style={{ background: `${bgrColor(color)}` }}\n                          className={classNames(\n                            'button button_circle',\n                            { active: product.color === color },\n                          )}\n                        />\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"product-details__select\">\n                  <div className=\"capacity\">\n                    <h3 className=\"capacity__title capacity__title\">\n                      Select capacity\n                    </h3>\n                    <div className=\"capacity__list\">\n                      {product.capacityAvailable.map(capacity => (\n                        <Link\n                          key={capacity}\n                          to={{\n                            pathname: `${navigateTo(pathname, product.capacity, capacity)}`,\n                          }}\n                          className={classNames(\n                            'button button_square',\n                            { active: product.capacity === capacity },\n                          )}\n                        >\n                          {capacity}\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                <ProductPrice\n                  regularPrice={product.priceRegular}\n                  discountPrice={product.priceDiscount}\n                />\n                <ButtonAddToCart\n                  product={selectedItem}\n                  isProductInFav={isProductSelectedinFav}\n                  isProductInCart={isProductSelectedinCart}\n                />\n                <PropertyList properties={chooseProperties(product)} />\n              </div>\n            </div>\n            <div className=\"product-details__row\">\n              <div className=\"product-details__section\">\n                <h2 className=\"product-details__subtitle\">About</h2>\n                <div data-cy=\"productDescription\" className=\"description\">\n                  {product.description && (\n                    product.description.map(description => (\n                      <div\n                        key={description.title}\n                        className=\"description__item\"\n                      >\n                        <h3 className=\"description__title\">\n                          {description.title}\n                        </h3>\n                        <p className=\"description__text\">\n                          {description.text}\n                        </p>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n              <div className=\"product-details__section\">\n                <h2 className=\"product-details__subtitle\">Tech specs</h2>\n                <div className=\"tech-specifications\">\n                  {Object.keys(TechnicalSpecifications).map(spec => (\n                    <div key={spec} className=\"tech-specifications__item\">\n                      <p className=\"tech-specifications__text\">\n                        {spec}\n                      </p>\n                      <p className={classNames(\n                        'tech-specifications__text',\n                        'tech-specifications__text--bold',\n                      )}\n                      >\n                        {calcValueSpecification(product, spec)}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n\n      {error && !isProductFind && (\n        <p className=\"page__title\">Product not found</p>\n      )}\n\n      {!isLoading && (\n        <section className=\"section\">\n          <h1 className=\"section__title\">You may also like</h1>\n          <SlickSlider\n            products={products}\n            sortBy={SortType.Random}\n          />\n        </section>\n      )}\n    </div>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport { AppContext } from '../../context/AppContextProvider';\nimport { BreadCrumbs } from '../../components/BreadCrumbs/BreadCrumbs';\nimport { NotFound } from '../../components/NotFound/NotFound';\nimport { ModelsCounter } from '../../components/ModelsCounter/ModelsCounter';\nimport { ProductList } from '../../components/ProductList/ProductList';\n\nexport const FavoritesPage:React.FC = () => {\n  const { favorites } = useContext(AppContext);\n  const [productCount, setProductCount] = useState(favorites.length);\n\n  const handleVisibleProductsNumber = (number: number) => {\n    setProductCount(number);\n  };\n\n  return (\n    <div className=\"page__favorites\">\n      <BreadCrumbs />\n      <h1 className=\"main-title\">Favorites</h1>\n      <ModelsCounter number={productCount} />\n\n      {!favorites.length ? (\n        <NotFound\n          title=\"Your favorites list is empty\"\n        />\n      ) : (\n        <ProductList\n          products={favorites}\n          handleVisibleProductsNumber={handleVisibleProductsNumber}\n        />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { NotFound } from '../../components/NotFound/NotFound';\n\nexport const NotFoundPage:React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const redirectTimer = setTimeout(() => {\n      navigate('/');\n    }, 1000);\n\n    return () => clearTimeout(redirectTimer);\n  }, [navigate]);\n\n  return (\n    <NotFound title=\"Page not found\" />\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from '../../helpers/PageNavLink';\nimport './footer.scss';\n\nexport const Footer: React.FC = () => {\n  const scrollToElement = (elementId: string) => {\n    const element = document.getElementById(elementId);\n\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__container\">\n        <div className=\"footer__logo\" />\n        <div className=\"nav\">\n          <PageNavLink text=\"GITHUB\" to=\"https://github.com/Anastasiya145/\" />\n          <PageNavLink text=\"CONTACTS\" to=\"tel:+330784070315\" />\n          <PageNavLink text=\"RIGHTS\" to=\"https://github.com/Anastasiya145/\" />\n        </div>\n        {/* eslint-disable-next-line */}\n        <button\n          className=\"button button_scroll\"\n          type=\"button\"\n          onClick={() => scrollToElement('header')}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { ProductInCart } from '../../types/Product';\nimport { AppContext } from '../../context/AppContextProvider';\nimport './checkoutCard.scss';\n\nexport type Props = {\n  item: ProductInCart;\n};\n\nexport const CheckoutCard:React.FC<Props> = ({ item }) => {\n  const { toggleToCart, updateCountInCart } = useContext(AppContext);\n  const [count, setCount] = useState(item.count);\n\n  useEffect(() => {\n    updateCountInCart(item.itemId, count);\n  }, [item.itemId, count]);\n\n  const totalPrice = () => {\n    return item.price * count;\n  };\n\n  const handleDecrease = () => {\n    setCount((prevCount: number) => prevCount - 1);\n  };\n\n  const handleIncrease = () => {\n    setCount((prevCount: number) => prevCount + 1);\n  };\n\n  return (\n    <div className=\"checkout-card\">\n      {/* eslint-disable-next-line */}\n      <button\n        type=\"button\"\n        data-cy=\"cartDeleteButton\"\n        className=\"checkout-card__button-remove\"\n        onClick={() => toggleToCart(item)}\n      />\n      <div className=\"checkout-card__content\">\n        <img\n          alt={item.name}\n          src={item.image}\n          className=\"checkout-card__img\"\n        />\n        <Link className=\"checkout-card__title\" to={`/${item.category}/${item.itemId}`}>\n          {item.name}\n        </Link>\n      </div>\n      <div className=\"checkout-card__container\">\n        <div className=\"checkout-card__actions\">\n          {/* eslint-disable-next-line */}\n          <button\n            type=\"button\"\n            className={classNames(\n              'checkout-card__button checkout-card__button_prev',\n              { disabled: count === 1 },\n            )}\n            onClick={handleDecrease}\n          />\n          <div className=\"checkout-card__count\">\n            {count}\n          </div>\n          {/* eslint-disable-next-line */}\n          <button\n            type=\"button\"\n            className=\"checkout-card__button checkout-card__button_next\"\n            onClick={handleIncrease}\n          />\n        </div>\n        <p className=\"checkout-card__price\">\n          {`$${totalPrice()}`}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AppContext } from '../../context/AppContextProvider';\nimport { ProductInCart } from '../../types/Product';\nimport { ModelsCounter } from '../../components/ModelsCounter/ModelsCounter';\nimport { NotFound } from '../../components/NotFound/NotFound';\nimport { BreadCrumbs } from '../../components/BreadCrumbs/BreadCrumbs';\nimport { CheckoutCard } from '../../components/CheckoutCard/CheckoutCard';\nimport './cartPage.scss';\n\nexport const CartPage:React.FC = () => {\n  const { cart } = useContext(AppContext);\n  const [isPopupShown, setIsPopupShown] = useState(false);\n  const [totalSum, setTotalSum] = useState(0);\n  const [totalModelsCount, setTotalModelsCount] = useState(0);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      const totalCost = cart.reduce((\n        accumulator,\n        item: ProductInCart,\n      ) => accumulator + item.price * item.count, 0);\n\n      const totalCount = cart.reduce((\n        accumulator,\n        item: ProductInCart,\n      ) => accumulator + item.count, 0);\n\n      setTotalSum(totalCost);\n      setTotalModelsCount(totalCount);\n    }\n  }, [cart]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsPopupShown(false);\n    }, 3000);\n  }, [isPopupShown]);\n\n  return (\n    <div className=\"page__cart\">\n      <BreadCrumbs />\n      <h1 className=\"main-title\">Cart</h1>\n      <ModelsCounter number={cart.length} />\n\n      {!cart.length ? (\n        <NotFound\n          title=\"Your cart is empty\"\n        />\n      ) : (\n        <div className=\"cart\">\n          <div className=\"cart__products\">\n            {cart.map(item => (\n              <CheckoutCard key={item.id} item={item} />\n            ))}\n          </div>\n          <div className=\"cart__container\">\n            <h1 data-cy=\"productQauntity\" className=\"cart__budget\">\n              {`$${totalSum}`}\n            </h1>\n            <p className=\"cart__text\">\n              {`Total for ${totalModelsCount} items`}\n            </p>\n            <button\n              type=\"button\"\n              className=\"cart__checkout\"\n              onClick={() => setIsPopupShown(true)}\n            >\n              Checkout\n            </button>\n          </div>\n          <div className={classNames(\n            'cart__popup',\n            { cart__popup_shown: isPopupShown },\n          )}\n          >\n            Sorry, this funtion is not implemented yet.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Routes, Route, useLocation } from 'react-router-dom';\nimport { AppProvider } from '../../context/AppContextProvider';\nimport { Product, ProductInCart } from '../../types/Product';\nimport { getProducts } from '../../api/fetchData';\nimport { useLocalStorage } from '../../helpers/hooks/useLocalStorage';\nimport ScrollToTop from '../../helpers/ScrollTop';\nimport { Header } from '../../components/Header/Header';\nimport { HomePage } from '../HomePage/HomePage';\nimport { CategoryPage } from '../CategoryPage/CategoryPage';\nimport { ItemPage } from '../ItemPage/ItemPage';\nimport { FavoritesPage } from '../FavoritesPage/FavoritesPage';\nimport { NotFoundPage } from '../NotFoundPage/NotFoundPage';\nimport { Footer } from '../../components/Footer/Footer';\nimport { CartPage } from '../CartPage/CartPage';\nimport './page.scss';\nimport { PathnamesApp } from '../../types/Pathnames';\n\nexport const Page: React.FC = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [phones, setPhones] = useState<Product[]>([]);\n  const [tablets, setTablets] = useState<Product[]>([]);\n  const [accessories, setAccessories] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [productsCounter, setProductsCounter] = useState({\n    phones: 0,\n    tablets: 0,\n    accessories: 0,\n  });\n  const [favorites, setFavorites] = useLocalStorage('favorites', []);\n  const [cart, setCart] = useLocalStorage('cart', []);\n  const { pathname } = useLocation();\n\n  const pathnameNormalized = pathname === '/' ? 'home' : pathname.substring(1);\n\n  async function loadProducts() {\n    setIsLoading(true);\n\n    try {\n      const productsFromServer = await getProducts();\n\n      setProducts(productsFromServer);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  useEffect(() => {\n    setPhones(products.filter(item => item.category === 'phones'));\n    setTablets(products.filter(item => item.category === 'tablets'));\n    setAccessories(products.filter(item => item.category === 'accessories'));\n  }, [products]);\n\n  useEffect(() => {\n    setProductsCounter({\n      phones: phones.length,\n      tablets: tablets.length,\n      accessories: accessories.length,\n    });\n  }, [phones, tablets, accessories]);\n\n  const isProductSelected = (\n    productId: string, productsGroup: Product[] | ProductInCart[],\n  ): boolean => {\n    return Array.isArray(productsGroup)\n      && productsGroup.some(product => product.itemId === productId);\n  };\n\n  const toggleToFavorites = (item: Product) => {\n    if (item && isProductSelected(item.itemId, favorites)) {\n      const newFavorites = favorites.filter(\n        (product: Product) => product.itemId !== item.itemId,\n      );\n\n      setFavorites(newFavorites);\n    } else {\n      setFavorites([...favorites, item]);\n    }\n  };\n\n  const toggleToCart = (item: Product | ProductInCart) => {\n    const productWidthCount = { ...item, count: 1 };\n\n    if (item && isProductSelected(productWidthCount.itemId, cart)) {\n      const newCart = cart.filter(\n        (product: Product) => product.itemId !== item.itemId,\n      );\n\n      setCart(newCart);\n    } else {\n      setCart([...cart, productWidthCount]);\n    }\n  };\n\n  const updateCountInCart = (productId: string, newCount: number) => {\n    const updatedCart = cart.map((item: ProductInCart) => {\n      if (item.itemId === productId) {\n        return { ...item, count: newCount };\n      }\n\n      return item;\n    });\n\n    setCart(updatedCart);\n  };\n\n  return (\n    <AppProvider\n      value={{\n        favorites,\n        cart,\n        toggleToFavorites,\n        toggleToCart,\n        isProductSelected,\n        updateCountInCart,\n      }}\n    >\n      <div className=\"page\">\n        <ScrollToTop />\n        <Header />\n        <main className=\"page__main\">\n          <div\n            className={`page__container page__container_${pathnameNormalized}`}\n          >\n            <Routes>\n              <Route path={PathnamesApp.Home}>\n                <Route\n                  index\n                  element={(\n                    <HomePage\n                      products={phones}\n                      productsCounter={productsCounter}\n                      isLoading={isLoading}\n                    />\n                  )}\n                />\n                <Route path={PathnamesApp.Phones}>\n                  <Route\n                    index\n                    element={(\n                      <CategoryPage />\n                    )}\n                  />\n                  <Route\n                    path=\":itemId\"\n                    element={<ItemPage products={products} />}\n                  />\n                </Route>\n                <Route\n                  path={PathnamesApp.Tablets}\n                  element={(\n                    <CategoryPage />\n                  )}\n                />\n                <Route\n                  path={PathnamesApp.Accessories}\n                  element={(\n                    <CategoryPage />\n                  )}\n                />\n                <Route\n                  path={PathnamesApp.Favorites}\n                  element={<FavoritesPage />}\n                />\n                <Route path={PathnamesApp.Cart} element={<CartPage />} />\n              </Route>\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    </AppProvider>\n  );\n};\n","import React from 'react';\nimport { Page } from './pages/Page/Page';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}